package cadastro;

import java.util.ArrayList;

import java.util.List;
import java.util.Scanner;

import basicas.Alimento;
import basicas.Eletronico;
import basicas.Higiene;
import basicas.Pessoa;
import basicas.Produto;
import produtos.Arroz;
import produtos.Carne;
import produtos.CremeDental;
import produtos.Feijao;
import produtos.Sabonete;
import produtos.Shampoo;
import produtos.Smartphone;
import produtos.Som;
import produtos.Tv;



public class Cliente {


	private ArrayList<Eletronico> listEletronicos = new ArrayList<Eletronico>();
	private ArrayList<Alimento> listAlimentos = new ArrayList<Alimento>();
	private ArrayList<Higiene> listHigiene = new ArrayList<Higiene>();


	private List listaSelecionada=null;
	private int categoriaSelecionada=-1;
	private Carrinho carrinho= new Carrinho();



	public void alimento(){


		Arroz arroz1 = new Arroz(01, "Arroz Arboreo", "Emocoes", 2.89);
		Arroz arroz2 = new Arroz(02, "Arroz Japones", "Bauducco", 9.60);
		Arroz arroz3 = new Arroz(03, "Arroz Integral", "tio joao", 3.30);

		listAlimentos.add(arroz1);
		listAlimentos.add(arroz2);
		listAlimentos.add(arroz3);

		Carne carne1= new Carne(04, "Carne Alcatra", "JBS", 21.12);
		Carne carne2= new Carne(05, "Carne Picanha", "Friboi", 45.02);
		Carne carne3= new Carne(06, "Carne Maminha", "Friboi", 36.57);

		listAlimentos.add(carne1);
		listAlimentos.add(carne2);
		listAlimentos.add(carne3);

	}


	public void eletronico(){


		//Instanciamos os produtos da lista Eletronicos


		Tv tv1 = new Tv(10, "TV Smart 49", "LG", 2889.00);
		Tv tv2 = new Tv(11, "TV led 40", "Panasonic", 1099.00);
		Tv tv3 = new Tv(12, "Tv 4k led 70", "Samsung", 7330.00);

		listEletronicos.add(tv1);
		listEletronicos.add(tv2);
		listEletronicos.add(tv3);


		Som som1 = new Som(13, "Som JBL go", "JBL", 889.00);
		Som som2 = new Som(14, "Som xtreme", "LG", 1099.00);
		Som som3 = new Som(15, "Som MicroSystem", "Samsung", 330.90);


		listEletronicos.add(som1);
		listEletronicos.add(som2);
		listEletronicos.add(som3);


		Smartphone smartphone1 = new Smartphone(16, "Smartphone G6 PLUS", "Motorola", 1210.00);
		Smartphone smartphone2 = new Smartphone(17, "Smartphone 7s plus", "Iphone", 5089.00);
		Smartphone smartphone3 = new Smartphone(18, "Smartphone S10", "Samsung", 4899.00);


		listEletronicos.add(smartphone1);
		listEletronicos.add(smartphone2);
		listEletronicos.add(smartphone3);

	}

	public void higiene(){

		
		Shampoo shampoo1 = new Shampoo (19, "Shampoo Liso perfeito", "Seda", 8.90);
		Shampoo shampoo2 = new Shampoo (20, "Shampoo Cachos", "Aussie", 30.50);
		Shampoo shampoo3 = new Shampoo (21, "Shampoo Anti caspa", "Clear", 15.00);	


		listHigiene.add(shampoo1);
		listHigiene.add(shampoo2);
		listHigiene.add(shampoo3);


		CremeDental cremeDental1 = new CremeDental (22, "Creme Dental Total 12","Colgate", 3.00 );
		CremeDental cremeDental2 = new CremeDental (23, "Creme Dental Sorriso Pro-White", "Even", 3.90);
		CremeDental cremeDental3 = new CremeDental (24, "Creme Dental Precision CLEAN", "Oral B", 5.00);

		listHigiene.add(cremeDental1);
		listHigiene.add(cremeDental2);
		listHigiene.add(cremeDental3);


		Sabonete sabonete1 = new Sabonete (25, "Sabonete Botanicals", "Lux", 2.50);
		Sabonete sabonete2 = new Sabonete (26, "Sabonete Go Fresh", "Dove", 3.49);
		Sabonete sabonete3 = new Sabonete (27, "Sabonete Baby", "Johnsons", 2.95);


		listHigiene.add(sabonete1);
		listHigiene.add(sabonete2);
		listHigiene.add(sabonete3);

	}


	public static void main(String[] args) {

		Cliente cliente = new Cliente();



		cliente.alimento();
		cliente.eletronico ();
		cliente.higiene();

		Scanner sc = new Scanner(System.in);

		/* o boolean pra sair é falso por padrao
		 * enquanto o cliente não sair (999)
		 * o menu vai reaparecer 
		 */
		boolean sair=false;

		while(!sair) {
			sair = cliente.home(sc);
		}

	}

	public boolean home(Scanner sc) {
		System.out.println("====== APSMART COMPRAS ======");
		System.out.println("Acesse nosso menu e escolha a categoria que deseja");
		System.out.println("ou consulte seu carrinho de compras");
		System.out.println("1 - Produtos Eletronicos");
		System.out.println("2 - Produtos de Alimentos");
		System.out.println("3 - Produtos de Higiene");
		System.out.println("4 - carrinho de compras ");
		System.out.println("999 - Sair");
		int opt=getValor(sc);

/* como definimos o valor da variavel categoriaselecionada = -1 (no inicio da classe)
 * se a categoriaselecionada (aqui embaixo) é igual a opt e opt == -1, sempre vai retornar verdadeiro
 * ou seja, enquanto a opcao for uma categoria selecionada vai retornar o menu depois, ver na main.
 * 
 */
		if(opt==-1) {
			return true;
		}


		categoriaSelecionada= opt;

		/* em qualquer caso do switch a opcao vai retornar o método printList, onde de fato vai haver a
		 * escolha pela categoria
		 */
		
		switch (categoriaSelecionada) {

		case 1:
		case 2:
		case 3:
		case 4:

			return printList(categoriaSelecionada, sc);	

		default:
			System.out.println("...:::Opcao invlida:::...");

			break;
		}

		opt= getValor(sc);

		if (opt == 0) {
			return false;

		} else if (opt == -1) {
			return true;

		}

		return false;
	}
	
	
	// criamos uma variavel do tipo list para representar os arrays, que sao as categorias
	
	public boolean printList(int opt, Scanner sc) {

		listaSelecionada=null;
		if(opt ==1) {
			listaSelecionada = listEletronicos;
		} else if(opt ==2) {
			listaSelecionada= listAlimentos;
		} else if(opt ==3) {
			listaSelecionada=listHigiene;
		} else if (opt==4) {
			//criamos um método para acessar o carrinho de forma detalhada
			return printCarrinho(sc);	
		}



		// esse index é a ordem dos produtos apresentadas, ex. 1- feijao A, 2- feijao B, 3-feiajo C
		int index =1;
				
		/* for each para imprimir a listaSelecionada pelo cliente, que é no caso a categoria de produtos
		 * que ele escolheu, essa forma que usei de pegar o produto "((Produto)prod).getId() " se chama cast
		 * e é um conceito dentro de polimorfismo, onde convertemos um valor de um tipo para outro tipo
		 * 
		 * por ex. numa classe abstrata animal
		 * onde for necessario usar um animal, eu posso usar um cachorro, mas onde for necessario um cachorro
		 * eu precisaria de cast para informar que o animal que eu estou passando é um cachorro
		 * 
		 */
		for (Object prod : listaSelecionada) {
			System.out.println(index + "-"+ "Cód (" +((Produto)prod).getId() + ")    " + ((Produto)prod).getTipo() + "  -  " + ((Produto)prod).getFabricante() + " -  R$"+((Produto)prod).getPreco());
			index++;
		}
		System.out.println("0 - Home");
		System.out.println("999 - Sair");

		opt = getValor(sc);

		if (opt == 0 ) {
			return false;
		} else if (opt == - 1){
			return true;
			/*
			 *  aqui, depois de escolhida a categoria, se a opcao nao for de sair do menu o else retorna 
			 *  o metodo escolher item, ou seja, depois da apresentacao dos itens existe essa chamada 
			 *  logo para o cliente escolher o produto e colocar no carrinho atraves do metodo abaixo
			 */
			
		} else {
			return escolherItem (sc, opt);
		}
	}



	public boolean escolherItem (Scanner sc, int opt) {
		
		/* no if se o opt (valor passado pelo cliente - index do produto) for maior que o tamanho da lista, 
		 * ex. a lista contem 9 itens se o cliente passar a opção 15, retorna opcao invalida, OU,
		 * se o produto nao existe na lista selecionada (null) tambem
		 * retorna opcao invalida . O else pega o produto da lista selecionada atraves do get(opt -1)
		 * e imprime as caracteristicas do produto escolhido pelo cliente
		 * no fim o carrinho acessa o metodo da classe carrinho (addItemPedido) que tem como parametro
		 * o produto selecionado e  a opcao escolhida pelo cliente
		 */

		if (opt > listaSelecionada.size()-1 || listaSelecionada.get(opt-1) == null) {
			System.out.println("...:::Opcao invlida:::...");
		} else { 
			Produto produtoSelecionado = ((Produto)listaSelecionada.get(opt-1));
			System.out.println("voce escolheu o item: " + produtoSelecionado.getTipo() + "  " + produtoSelecionado.getFabricante() + "  R$:  " +produtoSelecionado.getPreco());
			System.out.println("quantas unidades voce deseja?");
			System.out.println("                              ");
			System.out.println("                              ");


			opt = getValor (sc);

			carrinho.addItemPedido(produtoSelecionado,opt);

		}
		return false;

	}
	
/* recebe o scanner passado pelo cliente, no caso o produto escolhido
 *  
 */
	public boolean printCarrinho (Scanner sc) {
		System.out.println("Itens adicionados ao carrinho:");
		System.out.println("                              ");

		System.out.println("QTD | PRODUTO |...............| PREÇO" );
		boolean encontrou = false;

		/* se encontrou o produto no carrinho entao vai mostrar alguns detalhes do mesmo
		 * para que o cliente possa ver o que escolheu, se nao encontrou nada
		 * mostra a mensagem do carrinho vazio, se o carrinho nao estiver vazio mostra o total das compras
		 * atraves do getPrecoTotal, que foi a variavel que criamos na classe carrinho
		 */
		for (ItemPedido i : carrinho.getCarrinho()) {
			encontrou = true;
			System.out.println(" " + i.getQtd() + "    " + i.getProduto().getTipo() + "..........R$: " + i.getPrecoItem() );
		}
		if (!encontrou){
			System.out.println("*****Seu carrinho ainda esta vazio*****");

		} else {	
			System.out.println("                                                 ");
			System.out.println("Seu pedido custará R$: " + carrinho.getPrecoTotal());


		}

		System.out.println("Selecione 0 pra voltar");
		int opt = 999;
		while (opt != 0) {
			opt = getValor (sc);
		}
		return false;

	}

	public int getValor(Scanner sc){

		int opt = sc.nextInt();

		if(opt==999) {
			return -1;
		}
		else

			return opt;

	}

}


